# Generated by Django 5.2.4 on 2025-08-01 15:11

import apps.customers.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bonus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='Сумма бонусов')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата начисления')),
                ('expires_at', models.DateTimeField(default=apps.customers.models.Bonus.default_expires_at, verbose_name='Дата сгорания')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Бонусы',
                'verbose_name_plural': 'История бонусов',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surname', models.CharField(max_length=255, verbose_name='Фамилия клиента')),
                ('name', models.CharField(max_length=255, verbose_name='Имя клиента')),
                ('patronymic', models.CharField(max_length=255, null=True, verbose_name='Отчество клиента')),
                ('phone_number', models.CharField(max_length=12, unique=True, validators=[django.core.validators.RegexValidator(message='Номер телефона должен быть в формате 7991234567', regex='^\\+?\\d{11}$')], verbose_name='Номер телефона клиента')),
                ('email', models.EmailField(max_length=254, unique=True, validators=[django.core.validators.EmailValidator()], verbose_name='Почта клиента')),
                ('birthday', models.DateField(verbose_name='Дата рождения')),
                ('slug', models.SlugField(blank=True, max_length=255, unique=True, verbose_name='Url-идентификатор')),
                ('image', models.ImageField(blank=True, upload_to='clients/', verbose_name='Изображение клиента')),
            ],
            options={
                'verbose_name': 'Клиент',
                'verbose_name_plural': 'Клиенты',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Наименование промокода')),
                ('last_day', models.DateField(verbose_name='Последняя дата активности')),
                ('is_active', models.BooleanField(default=False, verbose_name='Статус промокоода')),
                ('is_personal', models.BooleanField(default=False, verbose_name='Персональный промокод')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PromocodeClient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'verbose_name': 'Промокод у клиента',
                'verbose_name_plural': 'Промокоды у клиентов',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='PromocodeUsage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('used_at', models.DateField(null=True, verbose_name='Дата использования')),
            ],
            options={
                'verbose_name': 'Использрованный промокод',
                'verbose_name_plural': 'Использованные промокоды',
                'ordering': ['-used_at'],
            },
        ),
    ]
